@inherits Umbraco.Web.Macros.PartialViewMacroPage
@{
    // variable that holds the  root of the application
    var home = Model.Content.AncestorsOrSelf(1).First();
}
@*helper method that calls itselv as long as there are child nodes*@
@helper Traverse(IPublishedContent node)
{
// variable that holds the result of a check to see if the page is protected
var isProtected = umbraco.library.IsProtected(node.Id, node.Path);
// variable that holds the result of a check to see if the page is protected and a check to see if the current user have access
var loginAccess = umbraco.library.IsProtected(node.Id, node.Path) && umbraco.library.HasAccess(node.Id, node.Path);

// if true write the name and url as an A tag  and run through the child nodes if anny
if (!isProtected || loginAccess)
{
        <li>
            <a href="@node.Url">
                @(!String.IsNullOrWhiteSpace(node.GetPropertyValue<string>("pageName")) ? node.GetPropertyValue<string>("pageName")
        : !String.IsNullOrWhiteSpace(node.GetPropertyValue<string>("pageTitle")) ? node.GetPropertyValue<string>("pageTitle") : node.Name)
        </a>
        @if (node.Children.Any())
        {
            <ul>
                @foreach (var n in node.Children.Where(n => !n.GetPropertyValue<bool>("hideFromSitemap")))
                {
                    @Traverse(n)
                }
            </ul>
        }
    </li>
}
}
<ul>
    @Traverse(home)
</ul>